from aiogram.types import ReplyKeyboardMarkup, WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder

from app.config import settings


def main_keyboard(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()

    kb.button(text="üåê –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=WebAppInfo(url=str(settings.BASE_SITE)))
    kb.button(text="‚ÑπÔ∏è –û –Ω–∞—Å", callback_data='about_us')
    kb.adjust(1)
    return kb.as_markup()


def start_keyboard(user_id: int) -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()

    kb.button(text="üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    kb.button(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è")
    if user_id == settings.ADMIN_ID:
        kb.button(text="üîë –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")
    kb.adjust(1)
    return kb.as_markup(resize_keyboard=True)


def admin_keyboard(user_id: int) -> InlineKeyboardMarkup:
    url_applications = f"{settings.BASE_SITE}/admin?admin_id={user_id}"
    kb = InlineKeyboardBuilder()
    kb.button(text="üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="back_home")
    kb.button(text="üìù –°–º–æ—Ç—Ä–µ—Ç—å –∑–∞—è–≤–∫–∏", web_app=WebAppInfo(url=str(settings.BASE_SITE) + f"/admin?admin_id={user_id}"))
    kb.adjust(1)
    return kb.as_markup()


def app_keyboard(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    url_add_application = f'{settings.BASE_SITE}/'
    kb.button(text="üìù C–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑", web_app=WebAppInfo(url=str(settings.BASE_SITE)))
    kb.adjust(1)
    return kb.as_markup()


def settings_keyboard(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üìû –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data='change_number')
    kb.adjust(1)
    return kb.as_markup()


def order_confirm(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="new_order")
    kb.button(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data="canc_order")
    kb.adjust(1)
    return kb.as_markup()